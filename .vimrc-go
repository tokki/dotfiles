call plug#begin()
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'fatih/molokai'
Plug 'vim-airline/vim-airline'
Plug 'dgryski/vim-godef'
call plug#end()

filetype on
syntax on
set encoding=utf-8
set background=dark
set nu
set guifont=Monaco:h13
let g:rehash256 = 1
let g:molokai_original = 1
colorscheme molokai
set scrolloff=3
set ruler
set laststatus=2
set title
set statusline=%t\ %y\ [line:\ %l]\ [col:\ %c]\ [format:\ %{&ff}]

set noexpandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set colorcolumn=0
set textwidth=0
set autoindent
autocmd FileType python setlocal tabstop=4 shiftwidth=4 softtabstop=4 colorcolumn=80 textwidth=79
autocmd FileType go setlocal tabstop=8 shiftwidth=8 softtabstop=8 
autocmd FileType html,htmldjango setlocal tabstop=2 shiftwidth=2 softtabstop=2 
autocmd FileType coffee,javascript setlocal tabstop=2 shiftwidth=2 softtabstop=2 

set wildmenu
set wildmode=full
set wildignore=*.swp,*.bak,*.pyc,*.class
set showcmd
set hlsearch
set ignorecase
set incsearch
set showmatch
set novb
set backspace=indent,eol,start
set history=1000
set nobackup
set noswapfile

set autochdir
set shell=zsh

set splitbelow
set splitright

set pastetoggle=<F4>

let mapleader=","
:command! W w
:command! Q q

nmap <leader><space>  :nohlsearch<CR>
map <leader>s :source ~/.vimrc<CR>

nmap <c-h> <c-w>h
nmap <c-l> <c-w>l
nmap <c-j> <c-w>j
nmap <c-k> <c-w>k
imap <C-A> <Home>
imap <C-E> <End>

nmap ,1 :b1<CR>
nmap ,2 :b2<CR>
nmap ,3 :b3<CR>
nmap ,4 :b4<CR>
nmap ,5 :b5<CR>
nmap ,6 :b6<CR>
nmap ,0 :bnext<CR>
nmap ,9 :bprev<CR>

map <up>    <nop>
map <down>  <nop>
map <left>  <nop>
map <right> <nop>

if &diff
    map <leader>1 :diffget LOCAL<CR>
    map <leader>2 :diffget BASE<CR>
    map <leader>3 :diffget REMOTE<CR>
endif

let g:go_fmt_command = "goimports"
let g:go_list_type = "quickfix"
let g:go_highlight_types = 1
let g:go_highlight_functions = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_operators = 1
let g:go_metalinter_autosave = 1
let g:go_metalinter_deadline = "3s"

map <C-n> :cnext<CR>
map <C-m> :cprevious<CR>
nnoremap <leader>a :cclose<CR>

autocmd FileType go nmap <leader>t  <Plug>(go-test)
autocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>
autocmd FileType go nmap <leader>r  <Plug>(go-run)
autocmd FileType go nmap <Leader>i <Plug>(go-info)

function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#test#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction

let g:godef_split=0

